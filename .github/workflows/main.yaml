name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions

on:
  # pull_request:          # triggers on any PR targeting any branch
  push:
    paths:
      - 'containers/**'  # triggers on any change inside the containers/ folder
  workflow_dispatch:

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Checkout Repo
        uses: actions/checkout@v4
        
      - name: 🔐 Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-ci
          
      - name: 🔑 Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
        
      - name: 🔍 Find Terraform Subdirectories
        id: find-dir
        run: |
          echo "TF_DIR=$(find containers -mindepth 1 -maxdepth 1 -type d | head -n 1)" 
          echo "TF_DIR=$(find containers -mindepth 1 -maxdepth 1 -type d | head -n 1)" >> "$GITHUB_OUTPUT"

      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.3"

      - name: 📦 Terraform Init & Plan
        run: |
          terraform -chdir=${{ steps.find-dir.outputs.TF_DIR }} init
          terraform -chdir=${{ steps.find-dir.outputs.TF_DIR }} plan -out=tf.plan

  # apply:
  #     name: Terraform Apply
  #     runs-on: ubuntu-latest
  #     needs: plan  # optional: only run apply if plan succeeds
  #     environment:
  #       name: production
  #     if: github.ref == 'refs/heads/main'  # only run on main branch (optional safety check)
  #     steps:
  #       - name: 🧾 Checkout Repo
  #         uses: actions/checkout@v4

  #       - name: 🔐 Connect to Tailscale
  #         uses: tailscale/github-action@v3
  #         with:
  #           oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
  #           oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
  #           tags: tag:github-ci
          
  #       - name: 🔑 Authenticate to GCP
  #         id: auth
  #         uses: google-github-actions/auth@v2
  #         with:
  #           credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
  
  #       - name: 🔍 Find Terraform Subdirectory
  #         id: find-dir
  #         run: |
  #           echo "TF_DIR=$(find containers -mindepth 1 -maxdepth 1 -type d | head -n 1)" >> "$GITHUB_OUTPUT"

  #       - name: 🛠️ Setup Terraform
  #         uses: hashicorp/setup-terraform@v3
  #         with:
  #           terraform_version: "1.3.3"
  
  #       - name: 📦 Terraform Init
  #         run: terraform -chdir=${{ steps.find-dir.outputs.TF_DIR }} init
  
  #       - name: 🚀 Terraform Apply
  #         run: terraform -chdir=${{ steps.find-dir.outputs.TF_DIR }} apply -auto-approve
 