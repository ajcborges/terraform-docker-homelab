name: Dispatch

on:
  push:
    paths:
      - 'containers/**'
    branches:
      - main

jobs:
  dispatch-ci:
    name: Run Terraform Plan for Updated Container
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # - name: ⚙️ Run Super-Lint
      #   uses: github/super-linter@v4
      #   env:
      #     DEFAULT_BRANCH: main
      #     GITHUB_TOKEN: ${{secrets.TOKEN_GITHUB}}

      - name: 🔍 Detect Updated App Name
        id: detect-app
        run: |
          echo "Detecting application name from changed files under containers/..."
          app_name=$(git diff --name-only ${{ github.sha }}~1 ${{ github.sha }} | grep '^containers/' | cut -d/ -f2 | sort -u | head -n1)
          if [[ -z "$app_name" ]]; then
            echo "No application detected. Exiting."
            exit 1
          fi
          echo "Detected application: $app_name"
          echo "APP_NAME=$app_name" >> $GITHUB_ENV

      - name: 🔐 Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-ci

      - name: 🔍 Tailscale Identity
        run: |
          tailscale status
          tailscale whois $(tailscale ip -4)

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'


      # - name: SSH test
      #   run: |
      #     ssh -o "StrictHostKeyChecking no" ${{ secrets.VPS_USER }}@whitewalker "
      #       pwd
      #       ls -ls
      #     "

      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.3"

      # Optional: Enable Terraform caching to speed up subsequent runs
      # - name: 📦 Cache Terraform Plugin Directory
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.terraform.d/plugin-cache
      #     key: terraform-plugins-${{ runner.os }}-${{ hashFiles('**/*.tf') }}

      - name: ⚙️ Terraform Init & Validate
        run: |
          terraform -chdir=containers/${{ env.APP_NAME }} fmt --recursive
          terraform -chdir=containers/${{ env.APP_NAME }} init
          terraform -chdir=containers/${{ env.APP_NAME }} validate

      - name: 📄 Terraform Plan
        run: |
          terraform -chdir=containers/${{ env.APP_NAME }} plan 

      - name: Terraform Apply
        run: |
          terraform -chdir=containers/${{ env.APP_NAME }} apply -auto-approve
