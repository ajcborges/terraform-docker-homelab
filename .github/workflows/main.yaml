name: Dispatch

on:
  push:
    paths:
      - 'containers/**'
    branches:
      - main

jobs:
  dispatch-ci:
    name: Run Terraform Plan for Updated Container
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: 🔍 Detect Updated App Name
        id: detect-app
        run: |
          echo "Detecting application name from changed files under containers/..."
          app_name=$(git diff --name-only ${{ github.sha }}~1 ${{ github.sha }} | grep '^containers/' | cut -d/ -f2 | sort -u | head -n1)
          if [[ -z "$app_name" ]]; then
            echo "No application detected. Exiting."
            exit 1
          fi
          echo "Detected application: $app_name"
          echo "APP_NAME=$app_name" >> $GITHUB_ENV

      - name: 🔐 Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: 📡 Show Tailscale Status
        run: tailscale status

      # - name: Ping WhiteWalker
      #   run: |
      #     ping -c 16 whitewalker
      #     ping -c 16 whitewalker.monitor-chimeras.ts.net
      #     ping -c 16 100.94.13.113

      - name: 🔐 Set up SSH key
        run: |
          printf "%s" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 22 whitewalker >> ~/.ssh/known_hosts
        shell: bash

      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.3"

      # Optional: Enable Terraform caching to speed up subsequent runs
      # - name: 📦 Cache Terraform Plugin Directory
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.terraform.d/plugin-cache
      #     key: terraform-plugins-${{ runner.os }}-${{ hashFiles('**/*.tf') }}

      - name: ⚙️ Terraform Init & Validate
        run: |
          terraform -chdir=containers/${{ env.APP_NAME }} init
          terraform -chdir=containers/${{ env.APP_NAME }} validate

      - name: 📄 Terraform Plan
        run: |
          terraform -chdir=containers/${{ env.APP_NAME }} plan -no-color -out .planfile
