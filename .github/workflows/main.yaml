name: Homelab CI/CD
run-name: CI Validation

on:
  # issue_comment:
  #   types: [created]
  # push:
  #   branches: [ main ]
  pull_request:
    types: [opened, reopened, synchronize]  
    paths-ignore:
      - '**/*.md'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  # report-trigger:
  #   if: |
  #     github.event.issue.pull_request && 
  #     contains(github.event.comment.body, 'report'
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ step.set-dirs.outputs.chnages_dirs }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed directories
        id: set-dirs
        run: |
          dirs=$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 | grep '^containers/' | awk -F/ '{print $1"/"$2}' | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "Changed directories: $dirs"
          echo "changed_dirs=$dirs" >> "$GITHUB_OUTPUT"
  plan:
    needs: detect-changes
    name: Terraform Plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJson(needs.detect-changes.outputs.dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    # permissions:
    #   pull-requests: read  # Optional but helpful
    steps:
      - name: 🧾 Checkout Repo
        uses: actions/checkout@v4
        
      - name: 🔐 Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-ci
          
      - name: 🔑 Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.3"

      - name: 📦 Terraform Init
        run: |
          terraform fmt --recursive
          terraform init
          terraform validate

      - name: 📦 Terraform  Plan
        run: |
          terraform plan 
          
  apply:
      needs: 
        - detect-changes
        - plan
      name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      runs-on: ubuntu-latest
      strategy:
        matrix:
          dir: ${{ fromJson(needs.detect-changes.outputs.dirs) }}
      defaults:
        run:
          working-directory: ${{ matrix.dir }}
      steps:
        - name: 🧾 Checkout Repo
          uses: actions/checkout@v4

        - name: 🔐 Connect to Tailscale
          uses: tailscale/github-action@v3
          with:
            oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
            oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
            tags: tag:github-ci
          
        - name: 🔑 Authenticate to GCP
          id: auth
          uses: google-github-actions/auth@v2
          with:
            credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

        - name: 🛠️ Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: "1.3.3"
  
        - name: 📦 Terraform Init
          run: |
            terraform fmt --recursive
            terraform init
            terraform validate

        - name: 📦 Terraform  Plan
          run: |
            terraform plan 
  
  #       - name: 🚀 Terraform Apply
  #         run: terraform -chdir=${{ steps.find-dir.outputs.TF_DIR }} apply -auto-approve
 
