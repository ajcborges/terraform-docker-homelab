name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions

on:
  workflow_dispatch:

jobs:
  prepare:
    name: Prepare Environment
    runs-on: ubuntu-latest
    outputs:
      app_name: ${{ steps.detect-app.outputs.app_name }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

  authentication:
    name: Authentication
    runs-on: ubuntu-latest
    needs: prepare

    steps:
          
      - name: 🔐 Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-ci
          
      - name: 🔑 Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'


  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: 
      - authentication
      - prepare
    env:
      APP_NAME: ${{ needs.prepare.outputs.app_name }}
      GCP_TOKEN: ${{ needs.authentication.outputs.access_token }}

    steps:
      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.3"

      - name: ⚙️ Terraform Init & Validate
        run: |
          terraform -chdir=containers/${APP_NAME} fmt --recursive
          terraform -chdir=containers/${APP_NAME} init
          terraform -chdir=containers/${APP_NAME} validate

      - name: 📄 Terraform Plan
        run: |
          terraform -chdir=containers/${APP_NAME} plan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    environment: production
    env:
      APP_NAME: ${{ needs.prepare.outputs.app_name }}

    steps:
      - name: 🚀 Terraform Apply
        run: |
          terraform -chdir=containers/${APP_NAME} apply -auto-approve
