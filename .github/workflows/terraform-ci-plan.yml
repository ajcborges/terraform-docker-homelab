name: Homelab CI/CD Workflow
run-name: "Terraform Plan (CI) - ${{ github.ref_name }}" 
on:
  pull_request:
    types: [opened, reopened, synchronize]  
    paths-ignore:
      - '**/*.md'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  detect-terraform-directory:
    runs-on: ubuntu-latest
    outputs:
          changed_tf_dirs: ${{ steps.detect-tf-dirs.outputs.changed_tf_dirs }}
    steps:
      - name: Checkout code    
        uses: actions/checkout@v4

      - name: Detect changed Terraform directories
        id: detect-tf-dirs
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
      
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }})
      
          TF_DIRS=$(echo "$CHANGED_FILES" | grep '\.tf$' | xargs -n1 dirname | sort -u | jq -R -s -c 'split("\n")[:-1]')
      
          echo "Changed Terraform directories: $TF_DIRS"
      
          if [[ "$TF_DIRS" == "[]" || -z "$TF_DIRS" ]]; then
            echo "No Terraform directory changes detected."
            echo 'changed_tf_dirs=[]' >> "$GITHUB_OUTPUT"
            exit 0
          else
            echo "changed_tf_dirs=$TF_DIRS" >> "$GITHUB_OUTPUT"
          fi
          
  terraform-plan:
    needs: detect-terraform-directory
    if: ${{ needs.detect-terraform-directory.outputs.changed_tf_dirs != '[]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code    
        uses: actions/checkout@v4
        
      - name: üõ†Ô∏è Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.3"
          
      - name: üì¶ Terraform Init
        run: |
            for dir in $(echo '${{ needs.detect-terraform-directory.outputs.changed_tf_dirs }}' | jq -r '.[]'); do
              echo "Processing directory: $dir"
              if [ -d "$dir" ] && [ "$(find "$dir" -name '*.tf' | wc -l)" -gt 0 ]; then
                terraform -chdir="$dir" init
                terraform -chdir="$dir" plan
              else
                echo "Skipping $dir ‚Äî not a valid Terraform directory."
              fi
            done

          
