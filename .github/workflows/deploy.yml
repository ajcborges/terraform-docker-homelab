name: Homelab Deploy
run-name: "Deploy (CD) - ${{ github.ref_name }}"

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.set-dirs.outputs.changed_dirs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed directories
        id: set-dirs
        run: |
          BASE_REF="${{ github.base_ref }}"
          if [ -z "$BASE_REF" ]; then
            echo "BASE_REF not found. Skipping diff detection."
            echo 'changed_dirs=[]' >> "$GITHUB_OUTPUT"
            exit 0
          fi
          git fetch origin "$BASE_REF" --depth=1
          dirs=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | grep '^containers/' | awk -F/ '{print $1"/"$2}' | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "Changed directories: $dirs"

          if [[ "$dirs" == "[]" || -z "$dirs" ]]; then
            echo "No relevant directory changes detected."
            echo 'changed_dirs=[]' >> "$GITHUB_OUTPUT"
          else
            echo "changed_dirs=$dirs" >> "$GITHUB_OUTPUT"
          fi
          
  debug-output:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - name: Show Changed Directories
        run: |
          echo "Terraform directories changed:"
          echo "${{ needs.detect-changes.outputs.dirs }}" | jq .

  plan:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.dirs != '[]' && needs.detect-changes.outputs.dirs != '' && needs.detect-changes.outputs.dirs != null }}
    name: Terraform Plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJson(needs.detect-changes.outputs.dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    steps:
      - name: 🧾 Checkout Repo
        uses: actions/checkout@v4
        
      - name: 🔐 Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-ci
          
      - name: 🔑 Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.3"

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

      - name: 📦 Terraform Init
        run: |
          terraform fmt --recursive
          terraform init
          terraform validate

      - name: 📦 Terraform  Plan
        run: |
          terraform plan -out="terraform.tfplan"

      - uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ matrix.dir }}
          path: terraform.tfplan

      - name: Check for terraform.tfplan
        run: |
          if [ ! -f terraform.tfplan ]; then
            echo "No plan file found, skipping apply."
            exit 0
          fi
          
  apply:
      needs: [ detect-changes, plan ]
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.detect-changes.outputs.dirs != '[]' && needs.detect-changes.outputs.dirs != ''
      name: Terraform Apply
      runs-on: ubuntu-latest
      strategy:
        matrix:
          dir: ${{ fromJson(needs.detect-changes.outputs.dirs) }}
      defaults:
        run:
          working-directory: ${{ matrix.dir }}
      steps:
        - name: 🧾 Checkout Repo
          uses: actions/checkout@v4

        - name: 🔐 Connect to Tailscale
          uses: tailscale/github-action@v3
          with:
            oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
            oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
            tags: tag:github-ci
          
        - name: 🔑 Authenticate to GCP
          id: auth
          uses: google-github-actions/auth@v2
          with:
            credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

        - name: 🛠️ Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: "1.3.3"

        - uses: actions/download-artifact@v4
          with:
            name: terraform-plan-${{ matrix.dir }}
            path: .
  
        - name: 🚀 Terraform Apply
          run: terraform  apply terraform.tfplan -auto-approve
 
